**************************************************************************************************************************

0)

// После удачной установки mongoDB была создана база данных sample и в новосозданную колеккцию users были записаны 844 документа.

C:\Program Files\MongoDB\Server\3.4\bin> mongoimport --db sample C:/data/users.json
2018-05-13T21:58:50.383+0300    no collection specified
2018-05-13T21:58:50.501+0300    using filename 'users' as collection
2018-05-13T21:58:50.852+0300    connected to: localhost
2018-05-13T21:58:51.738+0300    imported 844 documents

**************************************************************************************************************************

1)

// Был найден средний возраст всех пользователей.

> db.users.aggregate({$group : {_id : "avg", avg : {$avg : '$age'}}})
{ "_id" : "avg", "avg" : 30.38862559241706 }

**************************************************************************************************************************

2)

// Был найден средний возраст всех пользователей зарегестрированых в Аляске.

> db.users.aggregate({$match : {"address":/.*Alaska.*/}} , {$group : {_id : "avg_alaska", avg_alaska : {$avg : '$age'}} })
{ "_id" : "avg_alaska", "avg_alaska" : 31.5 }

**************************************************************************************************************************

// Было вычесленно значение, необходимое для написания следующих запросов.

Math.ceil(avg + avg_alaska) = Math.ceil(30.38862559241706 + 31.5) = 62

**************************************************************************************************************************

3)

// Пропуская 62 документа, находим первого с другом Денисом и узнаем, что этот человек живет в Миннесоте.

> db.users.aggregate( {$skip : 62},{ $match :{ friends:{ $elemMatch: { "name" : /Dennis .*/ } }}},{$project:{_id : 1,name: 1,address:1}},{$limit:1}).pretty()
{
        "_id" : ObjectId("5adf3c1544abaca147cdd539"),
        "name" : "Keller Nixon",
        "address" : "591 Jamison Lane, Idamay, Minnesota, 3128"
}

**************************************************************************************************************************

4)

// В Миннесоте людям больше всего нравяться яблоки.

> db.users.aggregate({$match : {address: /.*Minnesota.*/}},{$group:{_id:"$favoriteFruit",count: { $sum: 1 }}})
{ "_id" : "strawberry", "count" : 3 }
{ "_id" : "apple", "count" : 10 }
{ "_id" : "banana", "count" : 2 }

**************************************************************************************************************************

5)

// Выбираем всех, кто любит яблоки, сортируем их по возрастанию даты регистрации и берем первого.

> db.users.aggregate({$match : {favoriteFruit: "apple"}},{$sort: {registered:1}},{$limit:1},{$project: {_id : 1,name: 1,features:1}})
{ "_id" : ObjectId("5adf3c1544abaca147cdd568"), "name" : "Magdalena Compton" }

// просим вывести features чтоб увидеть, что там пусто

**************************************************************************************************************************

6)

// Приписываем этому человеку, что он первый поедатель яблок

> db.users.update({"_id" : ObjectId("5adf3c1544abaca147cdd568")},{$set:{features: "first apple eater"}})
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })

// повторяем 5-й запрос для проверки

> db.users.aggregate({$match : {favoriteFruit: "apple"}},{$sort: {registered:1}},{$limit:1},{$project: {_id : 1,name: 1,features:1}})
{ "_id" : ObjectId("5adf3c1544abaca147cdd568"), "name" : "Magdalena Compton", "features" : "first apple eater" }

**************************************************************************************************************************

7)

// удаляем 253 любителя клубники

> db.users.remove({favoriteFruit:"strawberry"})
WriteResult({ "nRemoved" : 253 })

**************************************************************************************************************************

// Сохраняем остаток коллекции в json. Записываем только _id, name и features (если есть).

C:\Program Files\MongoDB\Server\3.4\bin>mongoexport --db sample --collection users --fields _id,name,features --out C:/data/out.json
2018-05-14T19:42:56.138+0300    connected to: localhost
2018-05-14T19:42:56.563+0300    exported 591 records
